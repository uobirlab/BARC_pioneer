<launch>


<!-- Runs everything that brings Dora to life -->  
<!-- e.g. drivers, sensors, teleoo, tf etc -->



 <!-- RosAria -->  
  <!-- run RosAria pioneer drivers -->
  <node pkg="rosaria" type="RosAria" name="RosAria" >
   <param name="port" type="string" value="/dev/ttyUSB0" />
   <param name="trans_decel" value="0.4"/>
   <param name="trans_accel" value="0.25"/>
   <param name="rot_accel" value="1.3"/>
   <remap from="/RosAria/cmd_vel" to="/cmd_vel" />
   <remap from="/RosAria/pose" to="odom" />
  </node>>
  
  <!-- Robot model -->
  <include file="$(find rocs_simulation)/launch/pioneer3dx_urdf.launch"/>

<!-- SICK laser 
  <node name="sick_tim551_2050001" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
    <param name="frame_id" type="string" value="base_laser"/>
    <param name="min_ang" type="double" value="-2"/>
    <param name="max_ang" type="double" value="2"/>
    <param name="intensity" type="bool" value="true"/>	
  </node>-->

<!-- Hokuyo laser -->
<node name="hokuyo_node" pkg="hokuyo_node" type="hokuyo_node" respawn="true" output="screen" ns="hokuyo">
    <param name="use_rep_117" type="bool" value="true"/>
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/ttyACM0"/>
    <param name="frame_id" type="string" value="hokuyo_laser"/>
<param name="intensity" type="bool" value="false"/>
<param name="min_ang" type="double" value="-2"/>
    <param name="max_ang" type="double" value="2"/>

  </node>

  <!-- kinect 
  <include file="$(find openni_launch)/launch/openni.launch"/>
  <param name="camera/driver/depth_registration" value="True" />-->
  
  <!--include file="$(find skeleton_markers)/launch/markers.launch"/-->
  
  <!--  Voxel Grid stuff 
 <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />-->

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data 
  <node pkg="nodelet" type="nodelet" name="voxel_grid_kinect" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/camera/depth_registered/points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 1.2
      filter_limit_max: 2.5
      filter_limit_negative: False
      leaf_size: 0.01
    </rosparam>
  </node>-->

  <!-- PTU -->
  <!--include file="$(find ptu46)/launch/ptu46_actions.launch"/-->

  <!-- joy node -->
  <node respawn="true" pkg="joy" type="joy_node" name="joy_node" >
    <param name="dev" type="string" value="/dev/input/js0" />
    <param name="deadzone" value="0.12" />
    <param name="autorepeat_rate" type="double" value="10.0" />
  </node>

  <!-- Axes -->
  <param name="linear_axis" value="1" type="int"/>  
  <param name="angular_axis" value="0" type="int"/>
  <!--param name="linear_speed_max" value="0.4" type="double"/>
  <param name="angular_speed_max" value="0.6" type="double"/-->
  
  <!-- teleop and safety stuff -->
  <node pkg="mixed_initiative_teleop" type="mixed_initiative_teleop" name="dora_teleop" output="screen" />
  <node pkg="mixed_initiative_controller" type="mixed_initiative_controller" name="mi_controller" output="screen" />

  <!-- tf transforms 
  <include file="$(find dora_2dnav)/launch/tf.launch"/>-->
 <node pkg="rviz" type="rviz" name="rviz" args="-d $(find barc_pioneer_launch)/rviz_cfg/rviz_cfg.rviz" respawn="true"/>



</launch>
